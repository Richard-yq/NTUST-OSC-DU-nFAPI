/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/hpe/openairinterface5g/openair2/RRC/NR/MESSAGES/ASN.1/nr-rrc-17.3.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -findirect-choice -D ./temp`
 */

#ifndef	_SlotFormatIndicator_H_
#define	_SlotFormatIndicator_H_


#include <asn_application.h>

/* Including external dependencies */
#include "RNTI-Value.h"
#include <NativeInteger.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include "ServCellIndex.h"
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct SlotFormatCombinationsPerCell;
struct AvailableRB_SetsPerCell_r16;
struct SearchSpaceSwitchTrigger_r16;
struct CO_DurationsPerCell_r16;
struct CO_DurationsPerCell_r17;

/* SlotFormatIndicator */
typedef struct SlotFormatIndicator {
	RNTI_Value_t	 sfi_RNTI;
	long	 dci_PayloadSize;
	struct SlotFormatIndicator__slotFormatCombToAddModList {
		A_SEQUENCE_OF(struct SlotFormatCombinationsPerCell) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *slotFormatCombToAddModList;
	struct SlotFormatIndicator__slotFormatCombToReleaseList {
		A_SEQUENCE_OF(ServCellIndex_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *slotFormatCombToReleaseList;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct SlotFormatIndicator__ext1 {
		struct SlotFormatIndicator__ext1__availableRB_SetsToAddModList_r16 {
			A_SEQUENCE_OF(struct AvailableRB_SetsPerCell_r16) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *availableRB_SetsToAddModList_r16;
		struct SlotFormatIndicator__ext1__availableRB_SetsToReleaseList_r16 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *availableRB_SetsToReleaseList_r16;
		struct SlotFormatIndicator__ext1__switchTriggerToAddModList_r16 {
			A_SEQUENCE_OF(struct SearchSpaceSwitchTrigger_r16) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *switchTriggerToAddModList_r16;
		struct SlotFormatIndicator__ext1__switchTriggerToReleaseList_r16 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *switchTriggerToReleaseList_r16;
		struct SlotFormatIndicator__ext1__co_DurationsPerCellToAddModList_r16 {
			A_SEQUENCE_OF(struct CO_DurationsPerCell_r16) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *co_DurationsPerCellToAddModList_r16;
		struct SlotFormatIndicator__ext1__co_DurationsPerCellToReleaseList_r16 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *co_DurationsPerCellToReleaseList_r16;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct SlotFormatIndicator__ext2 {
		struct SlotFormatIndicator__ext2__switchTriggerToAddModListSizeExt_r16 {
			A_SEQUENCE_OF(struct SearchSpaceSwitchTrigger_r16) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *switchTriggerToAddModListSizeExt_r16;
		struct SlotFormatIndicator__ext2__switchTriggerToReleaseListSizeExt_r16 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *switchTriggerToReleaseListSizeExt_r16;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct SlotFormatIndicator__ext3 {
		struct SlotFormatIndicator__ext3__co_DurationsPerCellToAddModList_r17 {
			A_SEQUENCE_OF(struct CO_DurationsPerCell_r17) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *co_DurationsPerCellToAddModList_r17;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SlotFormatIndicator_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SlotFormatIndicator;
extern asn_SEQUENCE_specifics_t asn_SPC_SlotFormatIndicator_specs_1;
extern asn_TYPE_member_t asn_MBR_SlotFormatIndicator_1[7];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "SlotFormatCombinationsPerCell.h"
#include "AvailableRB-SetsPerCell-r16.h"
#include "SearchSpaceSwitchTrigger-r16.h"
#include "CO-DurationsPerCell-r16.h"
#include "CO-DurationsPerCell-r17.h"

#endif	/* _SlotFormatIndicator_H_ */
#include <asn_internal.h>
