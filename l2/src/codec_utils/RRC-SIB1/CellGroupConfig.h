/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/hpe/openairinterface5g/openair2/RRC/NR/MESSAGES/ASN.1/nr-rrc-17.3.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -findirect-choice -D ./temp`
 */

#ifndef	_CellGroupConfig_H_
#define	_CellGroupConfig_H_


#include <asn_application.h>

/* Including external dependencies */
#include "CellGroupId.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include "LogicalChannelIdentity.h"
#include "SCellIndex.h"
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>
#include <BIT_STRING.h>
#include "BH-RLC-ChannelID-r16.h"
#include "ServCellIndex.h"
#include "Uu-RelayRLC-ChannelID-r17.h"
#include "LogicalChannelIdentityExt-r17.h"
#include "IAB-ResourceConfigID-r17.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum CellGroupConfig__ext1__reportUplinkTxDirectCurrent {
	CellGroupConfig__ext1__reportUplinkTxDirectCurrent_true	= 0
} e_CellGroupConfig__ext1__reportUplinkTxDirectCurrent;
typedef enum CellGroupConfig__ext2__f1c_TransferPath_r16 {
	CellGroupConfig__ext2__f1c_TransferPath_r16_lte	= 0,
	CellGroupConfig__ext2__f1c_TransferPath_r16_nr	= 1,
	CellGroupConfig__ext2__f1c_TransferPath_r16_both	= 2
} e_CellGroupConfig__ext2__f1c_TransferPath_r16;
typedef enum CellGroupConfig__ext2__uplinkTxSwitchingOption_r16 {
	CellGroupConfig__ext2__uplinkTxSwitchingOption_r16_switchedUL	= 0,
	CellGroupConfig__ext2__uplinkTxSwitchingOption_r16_dualUL	= 1
} e_CellGroupConfig__ext2__uplinkTxSwitchingOption_r16;
typedef enum CellGroupConfig__ext2__uplinkTxSwitchingPowerBoosting_r16 {
	CellGroupConfig__ext2__uplinkTxSwitchingPowerBoosting_r16_enabled	= 0
} e_CellGroupConfig__ext2__uplinkTxSwitchingPowerBoosting_r16;
typedef enum CellGroupConfig__ext3__reportUplinkTxDirectCurrentTwoCarrier_r16 {
	CellGroupConfig__ext3__reportUplinkTxDirectCurrentTwoCarrier_r16_true	= 0
} e_CellGroupConfig__ext3__reportUplinkTxDirectCurrentTwoCarrier_r16;
typedef enum CellGroupConfig__ext4__f1c_TransferPathNRDC_r17 {
	CellGroupConfig__ext4__f1c_TransferPathNRDC_r17_mcg	= 0,
	CellGroupConfig__ext4__f1c_TransferPathNRDC_r17_scg	= 1,
	CellGroupConfig__ext4__f1c_TransferPathNRDC_r17_both	= 2
} e_CellGroupConfig__ext4__f1c_TransferPathNRDC_r17;
typedef enum CellGroupConfig__ext4__uplinkTxSwitching_2T_Mode_r17 {
	CellGroupConfig__ext4__uplinkTxSwitching_2T_Mode_r17_enabled	= 0
} e_CellGroupConfig__ext4__uplinkTxSwitching_2T_Mode_r17;
typedef enum CellGroupConfig__ext4__uplinkTxSwitching_DualUL_TxState_r17 {
	CellGroupConfig__ext4__uplinkTxSwitching_DualUL_TxState_r17_oneT	= 0,
	CellGroupConfig__ext4__uplinkTxSwitching_DualUL_TxState_r17_twoT	= 1
} e_CellGroupConfig__ext4__uplinkTxSwitching_DualUL_TxState_r17;

/* Forward declarations */
struct MAC_CellGroupConfig;
struct PhysicalCellGroupConfig;
struct SpCellConfig;
struct RLC_BearerConfig;
struct SCellConfig;
struct BH_RLC_ChannelConfig_r16;
struct Uu_RelayRLC_ChannelConfig_r17;
struct IAB_ResourceConfig_r17;
struct ReportUplinkTxDirectCurrentMoreCarrier_r17;

/* CellGroupConfig */
typedef struct CellGroupConfig {
	CellGroupId_t	 cellGroupId;
	struct CellGroupConfig__rlc_BearerToAddModList {
		A_SEQUENCE_OF(struct RLC_BearerConfig) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *rlc_BearerToAddModList;
	struct CellGroupConfig__rlc_BearerToReleaseList {
		A_SEQUENCE_OF(LogicalChannelIdentity_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *rlc_BearerToReleaseList;
	struct MAC_CellGroupConfig	*mac_CellGroupConfig;	/* OPTIONAL */
	struct PhysicalCellGroupConfig	*physicalCellGroupConfig;	/* OPTIONAL */
	struct SpCellConfig	*spCellConfig;	/* OPTIONAL */
	struct CellGroupConfig__sCellToAddModList {
		A_SEQUENCE_OF(struct SCellConfig) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *sCellToAddModList;
	struct CellGroupConfig__sCellToReleaseList {
		A_SEQUENCE_OF(SCellIndex_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *sCellToReleaseList;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct CellGroupConfig__ext1 {
		long	*reportUplinkTxDirectCurrent;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct CellGroupConfig__ext2 {
		BIT_STRING_t	*bap_Address_r16;	/* OPTIONAL */
		struct CellGroupConfig__ext2__bh_RLC_ChannelToAddModList_r16 {
			A_SEQUENCE_OF(struct BH_RLC_ChannelConfig_r16) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *bh_RLC_ChannelToAddModList_r16;
		struct CellGroupConfig__ext2__bh_RLC_ChannelToReleaseList_r16 {
			A_SEQUENCE_OF(BH_RLC_ChannelID_r16_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *bh_RLC_ChannelToReleaseList_r16;
		long	*f1c_TransferPath_r16;	/* OPTIONAL */
		struct CellGroupConfig__ext2__simultaneousTCI_UpdateList1_r16 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *simultaneousTCI_UpdateList1_r16;
		struct CellGroupConfig__ext2__simultaneousTCI_UpdateList2_r16 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *simultaneousTCI_UpdateList2_r16;
		struct CellGroupConfig__ext2__simultaneousSpatial_UpdatedList1_r16 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *simultaneousSpatial_UpdatedList1_r16;
		struct CellGroupConfig__ext2__simultaneousSpatial_UpdatedList2_r16 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *simultaneousSpatial_UpdatedList2_r16;
		long	*uplinkTxSwitchingOption_r16;	/* OPTIONAL */
		long	*uplinkTxSwitchingPowerBoosting_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct CellGroupConfig__ext3 {
		long	*reportUplinkTxDirectCurrentTwoCarrier_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	struct CellGroupConfig__ext4 {
		long	*f1c_TransferPathNRDC_r17;	/* OPTIONAL */
		long	*uplinkTxSwitching_2T_Mode_r17;	/* OPTIONAL */
		long	*uplinkTxSwitching_DualUL_TxState_r17;	/* OPTIONAL */
		struct CellGroupConfig__ext4__uu_RelayRLC_ChannelToAddModList_r17 {
			A_SEQUENCE_OF(struct Uu_RelayRLC_ChannelConfig_r17) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *uu_RelayRLC_ChannelToAddModList_r17;
		struct CellGroupConfig__ext4__uu_RelayRLC_ChannelToReleaseList_r17 {
			A_SEQUENCE_OF(Uu_RelayRLC_ChannelID_r17_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *uu_RelayRLC_ChannelToReleaseList_r17;
		struct CellGroupConfig__ext4__simultaneousU_TCI_UpdateList1_r17 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *simultaneousU_TCI_UpdateList1_r17;
		struct CellGroupConfig__ext4__simultaneousU_TCI_UpdateList2_r17 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *simultaneousU_TCI_UpdateList2_r17;
		struct CellGroupConfig__ext4__simultaneousU_TCI_UpdateList3_r17 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *simultaneousU_TCI_UpdateList3_r17;
		struct CellGroupConfig__ext4__simultaneousU_TCI_UpdateList4_r17 {
			A_SEQUENCE_OF(ServCellIndex_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *simultaneousU_TCI_UpdateList4_r17;
		struct CellGroupConfig__ext4__rlc_BearerToReleaseListExt_r17 {
			A_SEQUENCE_OF(LogicalChannelIdentityExt_r17_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *rlc_BearerToReleaseListExt_r17;
		struct CellGroupConfig__ext4__iab_ResourceConfigToAddModList_r17 {
			A_SEQUENCE_OF(struct IAB_ResourceConfig_r17) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *iab_ResourceConfigToAddModList_r17;
		struct CellGroupConfig__ext4__iab_ResourceConfigToReleaseList_r17 {
			A_SEQUENCE_OF(IAB_ResourceConfigID_r17_t) list;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *iab_ResourceConfigToReleaseList_r17;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext4;
	struct CellGroupConfig__ext5 {
		struct ReportUplinkTxDirectCurrentMoreCarrier_r17	*reportUplinkTxDirectCurrentMoreCarrier_r17;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext5;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} CellGroupConfig_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_reportUplinkTxDirectCurrent_16;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_f1c_TransferPath_r16_24;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_uplinkTxSwitchingOption_r16_36;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_uplinkTxSwitchingPowerBoosting_r16_39;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_reportUplinkTxDirectCurrentTwoCarrier_r16_42;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_f1c_TransferPathNRDC_r17_45;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_uplinkTxSwitching_2T_Mode_r17_49;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_uplinkTxSwitching_DualUL_TxState_r17_51;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_CellGroupConfig;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "MAC-CellGroupConfig.h"
#include "PhysicalCellGroupConfig.h"
#include "SpCellConfig.h"
#include "RLC-BearerConfig.h"
#include "SCellConfig.h"
#include "BH-RLC-ChannelConfig-r16.h"
#include "Uu-RelayRLC-ChannelConfig-r17.h"
#include "IAB-ResourceConfig-r17.h"
#include "ReportUplinkTxDirectCurrentMoreCarrier-r17.h"

#endif	/* _CellGroupConfig_H_ */
#include <asn_internal.h>
