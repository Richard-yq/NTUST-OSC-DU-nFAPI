/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/hpe/openairinterface5g/openair2/RRC/NR/MESSAGES/ASN.1/nr-rrc-17.3.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -findirect-choice -D ./temp`
 */

#ifndef	_MeasIdleCarrierNR_r16_H_
#define	_MeasIdleCarrierNR_r16_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ARFCN-ValueNR.h"
#include "SubcarrierSpacing.h"
#include <NativeEnumerated.h>
#include "RSRP-Range.h"
#include "RSRQ-Range.h"
#include <constr_SEQUENCE.h>
#include <NativeInteger.h>
#include <BOOLEAN.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasIdleCarrierNR_r16__reportQuantities_r16 {
	MeasIdleCarrierNR_r16__reportQuantities_r16_rsrp	= 0,
	MeasIdleCarrierNR_r16__reportQuantities_r16_rsrq	= 1,
	MeasIdleCarrierNR_r16__reportQuantities_r16_both	= 2
} e_MeasIdleCarrierNR_r16__reportQuantities_r16;

/* Forward declarations */
struct MultiFrequencyBandListNR;
struct CellListNR_r16;
struct BeamMeasConfigIdle_NR_r16;
struct ThresholdNR;
struct SSB_MTC;
struct SSB_ToMeasure;
struct SS_RSSI_Measurement;

/* MeasIdleCarrierNR-r16 */
typedef struct MeasIdleCarrierNR_r16 {
	ARFCN_ValueNR_t	 carrierFreq_r16;
	SubcarrierSpacing_t	 ssbSubcarrierSpacing_r16;
	struct MultiFrequencyBandListNR	*frequencyBandList;	/* OPTIONAL */
	struct CellListNR_r16	*measCellListNR_r16;	/* OPTIONAL */
	long	 reportQuantities_r16;
	struct MeasIdleCarrierNR_r16__qualityThreshold_r16 {
		RSRP_Range_t	*idleRSRP_Threshold_NR_r16;	/* OPTIONAL */
		RSRQ_Range_t	*idleRSRQ_Threshold_NR_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *qualityThreshold_r16;
	struct MeasIdleCarrierNR_r16__ssb_MeasConfig_r16 {
		long	*nrofSS_BlocksToAverage_r16;	/* OPTIONAL */
		struct ThresholdNR	*absThreshSS_BlocksConsolidation_r16;	/* OPTIONAL */
		struct SSB_MTC	*smtc_r16;	/* OPTIONAL */
		struct SSB_ToMeasure	*ssb_ToMeasure_r16;	/* OPTIONAL */
		BOOLEAN_t	 deriveSSB_IndexFromCell_r16;
		struct SS_RSSI_Measurement	*ss_RSSI_Measurement_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ssb_MeasConfig_r16;
	struct BeamMeasConfigIdle_NR_r16	*beamMeasConfigIdle_r16;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasIdleCarrierNR_r16_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_reportQuantities_r16_6;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MeasIdleCarrierNR_r16;
extern asn_SEQUENCE_specifics_t asn_SPC_MeasIdleCarrierNR_r16_specs_1;
extern asn_TYPE_member_t asn_MBR_MeasIdleCarrierNR_r16_1[8];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "MultiFrequencyBandListNR.h"
#include "CellListNR-r16.h"
#include "BeamMeasConfigIdle-NR-r16.h"
#include "ThresholdNR.h"
#include "SSB-MTC.h"
#include "SSB-ToMeasure.h"
#include "SS-RSSI-Measurement.h"

#endif	/* _MeasIdleCarrierNR_r16_H_ */
#include <asn_internal.h>
