/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/hpe/openairinterface5g/openair2/RRC/NR/MESSAGES/ASN.1/nr-rrc-17.3.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -findirect-choice -D ./temp`
 */

#ifndef	_ServingCellConfigCommonSIB_H_
#define	_ServingCellConfigCommonSIB_H_


#include <asn_application.h>

/* Including external dependencies */
#include "DownlinkConfigCommonSIB.h"
#include <NativeEnumerated.h>
#include <NativeInteger.h>
#include <BIT_STRING.h>
#include <constr_SEQUENCE.h>
#include <NULL.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ServingCellConfigCommonSIB__n_TimingAdvanceOffset {
	ServingCellConfigCommonSIB__n_TimingAdvanceOffset_n0	= 0,
	ServingCellConfigCommonSIB__n_TimingAdvanceOffset_n25600	= 1,
	ServingCellConfigCommonSIB__n_TimingAdvanceOffset_n39936	= 2
} e_ServingCellConfigCommonSIB__n_TimingAdvanceOffset;
typedef enum ServingCellConfigCommonSIB__ssb_PeriodicityServingCell {
	ServingCellConfigCommonSIB__ssb_PeriodicityServingCell_ms5	= 0,
	ServingCellConfigCommonSIB__ssb_PeriodicityServingCell_ms10	= 1,
	ServingCellConfigCommonSIB__ssb_PeriodicityServingCell_ms20	= 2,
	ServingCellConfigCommonSIB__ssb_PeriodicityServingCell_ms40	= 3,
	ServingCellConfigCommonSIB__ssb_PeriodicityServingCell_ms80	= 4,
	ServingCellConfigCommonSIB__ssb_PeriodicityServingCell_ms160	= 5
} e_ServingCellConfigCommonSIB__ssb_PeriodicityServingCell;
typedef enum ServingCellConfigCommonSIB__ext1__channelAccessMode_r16_PR {
	ServingCellConfigCommonSIB__ext1__channelAccessMode_r16_PR_NOTHING,	/* No components present */
	ServingCellConfigCommonSIB__ext1__channelAccessMode_r16_PR_dynamic,
	ServingCellConfigCommonSIB__ext1__channelAccessMode_r16_PR_semiStatic
} ServingCellConfigCommonSIB__ext1__channelAccessMode_r16_PR;
typedef enum ServingCellConfigCommonSIB__ext1__discoveryBurstWindowLength_r16 {
	ServingCellConfigCommonSIB__ext1__discoveryBurstWindowLength_r16_ms0dot5	= 0,
	ServingCellConfigCommonSIB__ext1__discoveryBurstWindowLength_r16_ms1	= 1,
	ServingCellConfigCommonSIB__ext1__discoveryBurstWindowLength_r16_ms2	= 2,
	ServingCellConfigCommonSIB__ext1__discoveryBurstWindowLength_r16_ms3	= 3,
	ServingCellConfigCommonSIB__ext1__discoveryBurstWindowLength_r16_ms4	= 4,
	ServingCellConfigCommonSIB__ext1__discoveryBurstWindowLength_r16_ms5	= 5
} e_ServingCellConfigCommonSIB__ext1__discoveryBurstWindowLength_r16;
typedef enum ServingCellConfigCommonSIB__ext2__channelAccessMode2_r17 {
	ServingCellConfigCommonSIB__ext2__channelAccessMode2_r17_enabled	= 0
} e_ServingCellConfigCommonSIB__ext2__channelAccessMode2_r17;
typedef enum ServingCellConfigCommonSIB__ext2__discoveryBurstWindowLength_v1700 {
	ServingCellConfigCommonSIB__ext2__discoveryBurstWindowLength_v1700_ms0dot125	= 0,
	ServingCellConfigCommonSIB__ext2__discoveryBurstWindowLength_v1700_ms0dot25	= 1,
	ServingCellConfigCommonSIB__ext2__discoveryBurstWindowLength_v1700_ms0dot5	= 2,
	ServingCellConfigCommonSIB__ext2__discoveryBurstWindowLength_v1700_ms0dot75	= 3,
	ServingCellConfigCommonSIB__ext2__discoveryBurstWindowLength_v1700_ms1	= 4,
	ServingCellConfigCommonSIB__ext2__discoveryBurstWindowLength_v1700_ms1dot25	= 5
} e_ServingCellConfigCommonSIB__ext2__discoveryBurstWindowLength_v1700;
typedef enum ServingCellConfigCommonSIB__ext3__enhancedMeasurementLEO_r17 {
	ServingCellConfigCommonSIB__ext3__enhancedMeasurementLEO_r17_true	= 0
} e_ServingCellConfigCommonSIB__ext3__enhancedMeasurementLEO_r17;

/* Forward declarations */
struct UplinkConfigCommonSIB;
struct TDD_UL_DL_ConfigCommon;
struct HighSpeedConfig_r16;
struct SemiStaticChannelAccessConfig_r16;
struct HighSpeedConfigFR2_r17;
struct UplinkConfigCommonSIB_v1700;

/* ServingCellConfigCommonSIB */
typedef struct ServingCellConfigCommonSIB {
	DownlinkConfigCommonSIB_t	 downlinkConfigCommon;
	struct UplinkConfigCommonSIB	*uplinkConfigCommon;	/* OPTIONAL */
	struct UplinkConfigCommonSIB	*supplementaryUplink;	/* OPTIONAL */
	long	*n_TimingAdvanceOffset;	/* OPTIONAL */
	struct ServingCellConfigCommonSIB__ssb_PositionsInBurst {
		BIT_STRING_t	 inOneGroup;
		BIT_STRING_t	*groupPresence;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} ssb_PositionsInBurst;
	long	 ssb_PeriodicityServingCell;
	struct TDD_UL_DL_ConfigCommon	*tdd_UL_DL_ConfigurationCommon;	/* OPTIONAL */
	long	 ss_PBCH_BlockPower;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct ServingCellConfigCommonSIB__ext1 {
		struct ServingCellConfigCommonSIB__ext1__channelAccessMode_r16 {
			ServingCellConfigCommonSIB__ext1__channelAccessMode_r16_PR present;
			union ServingCellConfigCommonSIB__ext1__channelAccessMode_r16_u {
				NULL_t	 dynamic;
				struct SemiStaticChannelAccessConfig_r16	*semiStatic;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *channelAccessMode_r16;
		long	*discoveryBurstWindowLength_r16;	/* OPTIONAL */
		struct HighSpeedConfig_r16	*highSpeedConfig_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct ServingCellConfigCommonSIB__ext2 {
		long	*channelAccessMode2_r17;	/* OPTIONAL */
		long	*discoveryBurstWindowLength_v1700;	/* OPTIONAL */
		struct HighSpeedConfigFR2_r17	*highSpeedConfigFR2_r17;	/* OPTIONAL */
		struct UplinkConfigCommonSIB_v1700	*uplinkConfigCommon_v1700;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct ServingCellConfigCommonSIB__ext3 {
		long	*enhancedMeasurementLEO_r17;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ServingCellConfigCommonSIB_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_n_TimingAdvanceOffset_5;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ssb_PeriodicityServingCell_12;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_discoveryBurstWindowLength_r16_26;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_channelAccessMode2_r17_35;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_discoveryBurstWindowLength_v1700_37;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_enhancedMeasurementLEO_r17_47;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_ServingCellConfigCommonSIB;
extern asn_SEQUENCE_specifics_t asn_SPC_ServingCellConfigCommonSIB_specs_1;
extern asn_TYPE_member_t asn_MBR_ServingCellConfigCommonSIB_1[11];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "UplinkConfigCommonSIB.h"
#include "TDD-UL-DL-ConfigCommon.h"
#include "HighSpeedConfig-r16.h"
#include "SemiStaticChannelAccessConfig-r16.h"
#include "HighSpeedConfigFR2-r17.h"
#include "UplinkConfigCommonSIB-v1700.h"

#endif	/* _ServingCellConfigCommonSIB_H_ */
#include <asn_internal.h>
