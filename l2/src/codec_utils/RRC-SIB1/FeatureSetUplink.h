/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/hpe/openairinterface5g/openair2/RRC/NR/MESSAGES/ASN.1/nr-rrc-17.3.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -findirect-choice -D ./temp`
 */

#ifndef	_FeatureSetUplink_H_
#define	_FeatureSetUplink_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include "FreqSeparationClass.h"
#include "FeatureSetUplinkPerCC-Id.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum FeatureSetUplink__scalingFactor {
	FeatureSetUplink__scalingFactor_f0p4	= 0,
	FeatureSetUplink__scalingFactor_f0p75	= 1,
	FeatureSetUplink__scalingFactor_f0p8	= 2
} e_FeatureSetUplink__scalingFactor;
typedef enum FeatureSetUplink__dummy3 {
	FeatureSetUplink__dummy3_supported	= 0
} e_FeatureSetUplink__dummy3;
typedef enum FeatureSetUplink__searchSpaceSharingCA_UL {
	FeatureSetUplink__searchSpaceSharingCA_UL_supported	= 0
} e_FeatureSetUplink__searchSpaceSharingCA_UL;
typedef enum FeatureSetUplink__twoPUCCH_Group {
	FeatureSetUplink__twoPUCCH_Group_supported	= 0
} e_FeatureSetUplink__twoPUCCH_Group;
typedef enum FeatureSetUplink__dynamicSwitchSUL {
	FeatureSetUplink__dynamicSwitchSUL_supported	= 0
} e_FeatureSetUplink__dynamicSwitchSUL;
typedef enum FeatureSetUplink__simultaneousTxSUL_NonSUL {
	FeatureSetUplink__simultaneousTxSUL_NonSUL_supported	= 0
} e_FeatureSetUplink__simultaneousTxSUL_NonSUL;
typedef enum FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_15kHz {
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_15kHz_upto2	= 0,
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_15kHz_upto4	= 1,
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_15kHz_upto7	= 2
} e_FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_15kHz;
typedef enum FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_30kHz {
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_30kHz_upto2	= 0,
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_30kHz_upto4	= 1,
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_30kHz_upto7	= 2
} e_FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_30kHz;
typedef enum FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_60kHz {
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_60kHz_upto2	= 0,
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_60kHz_upto4	= 1,
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_60kHz_upto7	= 2
} e_FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_60kHz;
typedef enum FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_120kHz {
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_120kHz_upto2	= 0,
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_120kHz_upto4	= 1,
	FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_120kHz_upto7	= 2
} e_FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot__scs_120kHz;

/* Forward declarations */
struct DummyI;
struct SRS_Resources;
struct DummyF;

/* FeatureSetUplink */
typedef struct FeatureSetUplink {
	struct FeatureSetUplink__featureSetListPerUplinkCC {
		A_SEQUENCE_OF(FeatureSetUplinkPerCC_Id_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} featureSetListPerUplinkCC;
	long	*scalingFactor;	/* OPTIONAL */
	long	*dummy3;	/* OPTIONAL */
	FreqSeparationClass_t	*intraBandFreqSeparationUL;	/* OPTIONAL */
	long	*searchSpaceSharingCA_UL;	/* OPTIONAL */
	struct DummyI	*dummy1;	/* OPTIONAL */
	struct SRS_Resources	*supportedSRS_Resources;	/* OPTIONAL */
	long	*twoPUCCH_Group;	/* OPTIONAL */
	long	*dynamicSwitchSUL;	/* OPTIONAL */
	long	*simultaneousTxSUL_NonSUL;	/* OPTIONAL */
	struct FeatureSetUplink__pusch_ProcessingType1_DifferentTB_PerSlot {
		long	*scs_15kHz;	/* OPTIONAL */
		long	*scs_30kHz;	/* OPTIONAL */
		long	*scs_60kHz;	/* OPTIONAL */
		long	*scs_120kHz;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *pusch_ProcessingType1_DifferentTB_PerSlot;
	struct DummyF	*dummy2;	/* OPTIONAL */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} FeatureSetUplink_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_scalingFactor_4;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_dummy3_8;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_searchSpaceSharingCA_UL_11;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_twoPUCCH_Group_15;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_dynamicSwitchSUL_17;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_simultaneousTxSUL_NonSUL_19;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_15kHz_22;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_30kHz_26;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_60kHz_30;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_120kHz_34;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_FeatureSetUplink;
extern asn_SEQUENCE_specifics_t asn_SPC_FeatureSetUplink_specs_1;
extern asn_TYPE_member_t asn_MBR_FeatureSetUplink_1[12];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "DummyI.h"
#include "SRS-Resources.h"
#include "DummyF.h"

#endif	/* _FeatureSetUplink_H_ */
#include <asn_internal.h>
